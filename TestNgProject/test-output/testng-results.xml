<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="5" failed="1" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-12-13T23:14:39Z" name="Suite" finished-at="2020-12-13T23:14:39Z" duration-ms="21">
    <groups>
    </groups>
    <test started-at="2020-12-13T23:14:39Z" name="Test" finished-at="2020-12-13T23:14:39Z" duration-ms="21">
      <class name="selenium.Testing2">
        <test-method signature="Test5()[pri:0, instance:selenium.Testing2@7a1ebcd8]" started-at="2020-12-13T23:14:39Z" name="Test5" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test5 -->
        <test-method signature="Test4()[pri:0, instance:selenium.Testing2@7a1ebcd8]" started-at="2020-12-13T23:14:39Z" name="Test4" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test4 -->
      </class> <!-- selenium.Testing2 -->
      <class name="selenium.Testing3">
        <test-method signature="createuser()[pri:1, instance:selenium.Testing3@5faeada1]" started-at="2020-12-13T23:14:39Z" name="createuser" finished-at="2020-12-13T23:14:39Z" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid Value expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid Value expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at selenium.Testing3.createuser(Testing3.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createuser -->
        <test-method signature="deleteuser()[pri:3, instance:selenium.Testing3@5faeada1]" started-at="2020-12-13T23:14:39Z" name="deleteuser" finished-at="2020-12-13T23:14:39Z" depends-on-methods="selenium.Testing3.edituser" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Testing3.deleteuser()[pri:3, instance:selenium.Testing3@5faeada1] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Testing3.deleteuser()[pri:3, instance:selenium.Testing3@5faeada1] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteuser -->
        <test-method signature="edituser()[pri:2, instance:selenium.Testing3@5faeada1]" started-at="2020-12-13T23:14:39Z" name="edituser" finished-at="2020-12-13T23:14:39Z" depends-on-methods="selenium.Testing3.createuser" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Testing3.edituser()[pri:2, instance:selenium.Testing3@5faeada1] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Testing3.edituser()[pri:2, instance:selenium.Testing3@5faeada1] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- edituser -->
      </class> <!-- selenium.Testing3 -->
      <class name="selenium.Testing1">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="beforeSuite" finished-at="2020-12-13T23:14:39Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="beforeTest" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="beforeClass" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="beforeMethod" finished-at="2020-12-13T23:14:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="afterMethod" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="Test1()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="Test1" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="afterMethod" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="beforeMethod" finished-at="2020-12-13T23:14:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="beforeMethod" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Test2()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="Test2" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="afterMethod" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="afterClass" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="Test3()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="Test3" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="afterTest" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:selenium.Testing1@34cd072c]" started-at="2020-12-13T23:14:39Z" name="afterSuite" finished-at="2020-12-13T23:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- selenium.Testing1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
